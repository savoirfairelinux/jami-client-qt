{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "db5853e7_5bfd06de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 29
      },
      "lineNbr": 0,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "Looking pretty good. Could use some tests",
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de266ebd_4ed1af0b",
        "filename": "CMakeLists.txt",
        "patchSetId": 29
      },
      "lineNbr": 660,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "let\u0027s keep these messages until all the platforms are covered",
      "range": {
        "startLine": 660,
        "startChar": 0,
        "endLine": 660,
        "endChar": 69
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffe72f55_9df14a17",
        "filename": "CMakeLists.txt",
        "patchSetId": 29
      },
      "lineNbr": 755,
      "author": {
        "id": 938
      },
      "writtenOn": "2025-05-07T23:08:26Z",
      "side": 1,
      "message": "`Hunspell`\nhttps://en.wikipedia.org/wiki/Hunspell",
      "range": {
        "startLine": 755,
        "startChar": 41,
        "endLine": 755,
        "endChar": 49
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ba6757f_fb467a62",
        "filename": "CMakeLists.txt",
        "patchSetId": 29
      },
      "lineNbr": 755,
      "author": {
        "id": 938
      },
      "writtenOn": "2025-05-07T23:08:26Z",
      "side": 1,
      "message": "Ensure",
      "range": {
        "startLine": 755,
        "startChar": 2,
        "endLine": 755,
        "endChar": 11
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5965742_c74545ad",
        "filename": "CMakeLists.txt",
        "patchSetId": 29
      },
      "lineNbr": 755,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "The important part here is the CMake object called `hunspell`, not the library itself. We could reword this as \"Ensure the client target depends on the target hunspell\", but I\u0027d rather the redundant comment be removed.",
      "parentUuid": "ffe72f55_9df14a17",
      "range": {
        "startLine": 755,
        "startChar": 41,
        "endLine": 755,
        "endChar": 49
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc9c612e_3a5e11e1",
        "filename": "CMakeLists.txt",
        "patchSetId": 29
      },
      "lineNbr": 758,
      "author": {
        "id": 938
      },
      "writtenOn": "2025-05-07T23:08:26Z",
      "side": 1,
      "message": "`# Ensure the generated version file can be found.`",
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1fda9ca_4738eb2b",
        "filename": "src/app/commoncomponents/LineEditContextMenu.qml",
        "patchSetId": 29
      },
      "lineNbr": 88,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "no need for scopes here and below when the script is one line â€” make the code a bit easier to read",
      "range": {
        "startLine": 86,
        "startChar": 23,
        "endLine": 88,
        "endChar": 13
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85dd3732_fd2ed75c",
        "filename": "src/app/commoncomponents/LineEditContextMenu.qml",
        "patchSetId": 29
      },
      "lineNbr": 98,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "is there a staticModel?",
      "range": {
        "startLine": 98,
        "startChar": 19,
        "endLine": 98,
        "endChar": 31
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3214415c_63029241",
        "filename": "src/app/commoncomponents/LineEditContextMenu.qml",
        "patchSetId": 29
      },
      "lineNbr": 122,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "Looks a bit like this should be clearing the model. It\u0027s called in `onClosed` which checks:\n```\nif (!suggestionList || suggestionList.length \u003d\u003d 0) {\n    return;\n}\n```\nand does not clear the model in that case. Is it guaranteed that the `suggestionList` and `dynamicModel` are synced?",
      "range": {
        "startLine": 122,
        "startChar": 8,
        "endLine": 122,
        "endChar": 54
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "babc361b_f7967529",
        "filename": "src/app/commoncomponents/LineEditContextMenu.qml",
        "patchSetId": 29
      },
      "lineNbr": 127,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "nitpick: prefer something like `menuItemsLength` as a variable name to cache `menuItems.length`",
      "range": {
        "startLine": 127,
        "startChar": 8,
        "endLine": 127,
        "endChar": 19
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8904ed69_a2dd06ae",
        "filename": "src/app/commoncomponents/SpellLanguageContextMenu.qml",
        "patchSetId": 29
      },
      "lineNbr": 60,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "not part of this commit, but :facepalm:",
      "range": {
        "startLine": 60,
        "startChar": 21,
        "endLine": 60,
        "endChar": 28
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e41cf092_f2747cf7",
        "filename": "src/app/filedownloader.cpp",
        "patchSetId": 29
      },
      "lineNbr": 0,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "nice",
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1aad2f4_4fac0d6c",
        "filename": "src/app/mainview/components/CachedFile.qml",
        "patchSetId": 29
      },
      "lineNbr": 2,
      "author": {
        "id": 938
      },
      "writtenOn": "2025-05-07T23:08:26Z",
      "side": 1,
      "message": "Update `2025` to `2025-2025`?\n\nThen a global find (`-2025`) and replace (`-2026`) can be done at the beginning of next year to correctly update only the `2025` years that need changing.\n\nPlease ignore if not SFL convention.\n\nThank you",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96259725_43abbca7",
        "filename": "src/app/mainview/components/CachedFile.qml",
        "patchSetId": 29
      },
      "lineNbr": 2,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "The update script should handle either case.",
      "parentUuid": "d1aad2f4_4fac0d6c",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "937df5b7_f9aa2ffd",
        "filename": "src/app/mainview/components/ChatViewHeader.qml",
        "patchSetId": 29
      },
      "lineNbr": 134,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "beautiful",
      "range": {
        "startLine": 122,
        "startChar": 20,
        "endLine": 134,
        "endChar": 21
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e41a200a_341bf174",
        "filename": "src/app/messagesadapter.cpp",
        "patchSetId": 29
      },
      "lineNbr": 43,
      "author": {
        "id": 938
      },
      "writtenOn": "2025-05-07T23:08:26Z",
      "side": 1,
      "message": "Is there a file that contains the `#define` constants?\n\nFor an alternative and preferred option, can an option please be added in the Jami settings allowing the user to change the number of spelling suggestions?\n\nThank you",
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94d86776_fe4fdeab",
        "filename": "src/app/messagesadapter.cpp",
        "patchSetId": 29
      },
      "lineNbr": 43,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "Agreed.",
      "parentUuid": "e41a200a_341bf174",
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46281cd0_7528b59b",
        "filename": "src/app/qmlregister.cpp",
        "patchSetId": 29
      },
      "lineNbr": 227,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "Is this in the right change?",
      "range": {
        "startLine": 227,
        "startChar": 4,
        "endLine": 227,
        "endChar": 63
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd13ee23_b6e4cbf6",
        "filename": "src/app/qmlregister.cpp",
        "patchSetId": 29
      },
      "lineNbr": 239,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "remove?",
      "range": {
        "startLine": 239,
        "startChar": 4,
        "endLine": 239,
        "endChar": 57
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a289c848_2845e141",
        "filename": "src/app/settingsview/components/ManageAccountPage.qml",
        "patchSetId": 29
      },
      "lineNbr": 44,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "Layouts and anchors?",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 44,
        "endChar": 65
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a41d095_e7b770bb",
        "filename": "src/app/spellcheckdictionarymanager.cpp",
        "patchSetId": 29
      },
      "lineNbr": 20,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "use header sections, and this is not used currently it seems",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 20,
        "endChar": 23
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c33ffcf_7171b8cb",
        "filename": "src/app/spellcheckdictionarymanager.h",
        "patchSetId": 29
      },
      "lineNbr": 2,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4745b637_34a863c1",
        "filename": "src/app/spellcheckdictionarymanager.h",
        "patchSetId": 29
      },
      "lineNbr": 24,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "header order should generally go from local to global. no harm in a line between sections",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 24,
        "endChar": 31
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c511cd4_7b57b52d",
        "filename": "src/app/spellcheckdictionarymanager.h",
        "patchSetId": 29
      },
      "lineNbr": 33,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "cachedInstalledDictionaries or cachedInstalledDictionaries_ if private",
      "range": {
        "startLine": 33,
        "startChar": 16,
        "endLine": 33,
        "endChar": 43
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4da14fa_e53e42ae",
        "filename": "src/app/spellcheckdictionarymanager.h",
        "patchSetId": 29
      },
      "lineNbr": 33,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "private?",
      "range": {
        "startLine": 33,
        "startChar": 16,
        "endLine": 33,
        "endChar": 43
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a03ecd1a_bb6a1d41",
        "filename": "src/app/spellcheckdictionarymanager.h",
        "patchSetId": 29
      },
      "lineNbr": 34,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "private",
      "range": {
        "startLine": 34,
        "startChar": 24,
        "endLine": 34,
        "endChar": 40
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d00f8362_e2788221",
        "filename": "src/app/spellcheckdictionarymanager.h",
        "patchSetId": 29
      },
      "lineNbr": 36,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "Don\u0027t return const QStrings. There\u0027s no real benefit to doing this.",
      "range": {
        "startLine": 36,
        "startChar": 16,
        "endLine": 36,
        "endChar": 21
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbbe1aad_4041d8a1",
        "filename": "src/app/spellcheckdictionarymanager.h",
        "patchSetId": 29
      },
      "lineNbr": 36,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "seems excessive to have getDictionariesPath, getDictionaryUrl, and getDictionaryPath",
      "range": {
        "startLine": 36,
        "startChar": 30,
        "endLine": 36,
        "endChar": 49
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e150f1a6_646fc9a7",
        "filename": "src/app/spellcheckdictionarymanager.h",
        "patchSetId": 29
      },
      "lineNbr": 42,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "Perhaps this should be private, and configurable. Is this used in this change?",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 42,
        "endChar": 73
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b39c796d_38eee744",
        "filename": "src/app/spellchecker.cpp",
        "patchSetId": 29
      },
      "lineNbr": 102,
      "author": {
        "id": 938
      },
      "writtenOn": "2025-05-07T23:08:26Z",
      "side": 1,
      "message": "`C++`",
      "range": {
        "startLine": 102,
        "startChar": 22,
        "endLine": 102,
        "endChar": 25
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94f9d2be_336362a1",
        "filename": "src/app/spellchecker.h",
        "patchSetId": 29
      },
      "lineNbr": 2,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3f9df58_4cb350ed",
        "filename": "src/app/spellchecker.h",
        "patchSetId": 29
      },
      "lineNbr": 35,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 20
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "435493d1_91cefae1",
        "filename": "src/app/spellchecker.h",
        "patchSetId": 29
      },
      "lineNbr": 45,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "endline here",
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3ff6e29_2a3dcf9a",
        "filename": "src/app/spellchecker.h",
        "patchSetId": 29
      },
      "lineNbr": 63,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "use project naming conventions",
      "range": {
        "startLine": 60,
        "startChar": 4,
        "endLine": 63,
        "endChar": 23
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "934c1829_0963afa3",
        "filename": "src/app/utilsadapter.cpp",
        "patchSetId": 29
      },
      "lineNbr": 37,
      "author": {
        "id": 90
      },
      "writtenOn": "2025-05-08T19:39:52Z",
      "side": 1,
      "message": "seems duplicated from the dictionary manager class",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 37,
        "endChar": 69
      },
      "revId": "3f8557eb965ab601e9e1a9c5f6346e333f2a608a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    }
  ]
}