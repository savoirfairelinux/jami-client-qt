{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "454cf716_7de29848",
        "filename": "src/app/mainview/components/MessageListView.qml",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-11-30T14:31:36Z",
      "side": 0,
      "message": "It removes the timestamp for one message. Should be\n\n```\nif (!nItem || !computeTimestampVisibility(item, itemIndex, nItem, nItemIndex)) {\n                Qt.callLater(computeChatview, item, itemIndex)\n}\n```",
      "range": {
        "startLine": 87,
        "startChar": 15,
        "endLine": 89,
        "endChar": 13
      },
      "revId": "f3334fed4563a180d1e99a5d5d1dd856ee600225",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a04f1184_4d39aff5",
        "filename": "src/app/mainview/components/MessageListView.qml",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 859
      },
      "writtenOn": "2022-11-30T15:08:06Z",
      "side": 0,
      "message": "It does not fix  the problem :/",
      "parentUuid": "454cf716_7de29848",
      "range": {
        "startLine": 87,
        "startChar": 15,
        "endLine": 89,
        "endChar": 13
      },
      "revId": "f3334fed4563a180d1e99a5d5d1dd856ee600225",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15ed9ccc_0cc59b8b",
        "filename": "src/app/mainview/components/MessageListView.qml",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-11-30T15:24:55Z",
      "side": 0,
      "message": "```\nif (itemIndex \u003d\u003d\u003d 0) {\n    Qt.callLater(computeSequencing, null, item, root.itemAtIndex(itemIndex + 1))\n    if (!nItem \u0026\u0026 !CurrentConversation.allMessagesLoaded) {\n        Qt.callLater(computeChatview, item, itemIndex)\n    }\n    Qt.callLater(computeTimestampVisibility, item, itemIndex, nItem, nItemIndex)\n}\n```\n\nFix it for me (as it will go back in the last condition once allMessagesLoaded is set and stop the loop)",
      "parentUuid": "a04f1184_4d39aff5",
      "range": {
        "startLine": 87,
        "startChar": 15,
        "endLine": 89,
        "endChar": 13
      },
      "revId": "f3334fed4563a180d1e99a5d5d1dd856ee600225",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "870cec65_bd80ac3d",
        "filename": "src/app/mainview/components/MessageListView.qml",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 859
      },
      "writtenOn": "2022-11-30T16:45:21Z",
      "side": 0,
      "message": "Done",
      "parentUuid": "15ed9ccc_0cc59b8b",
      "range": {
        "startLine": 87,
        "startChar": 15,
        "endLine": 89,
        "endChar": 13
      },
      "revId": "f3334fed4563a180d1e99a5d5d1dd856ee600225",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4db25c84_9501fe52",
        "filename": "src/app/mainview/components/MessageListView.qml",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 967
      },
      "writtenOn": "2022-11-30T17:10:46Z",
      "side": 0,
      "message": "```\nif (itemIndex \u003d\u003d\u003d 0) {\n   if (!nItem \u0026\u0026 !CurrentConversation.allMessagesLoaded) {\n       Qt.callLater(computeChatview, item, itemIndex)\n    } else {\n        computeSequencing( null, item, root.itemAtIndex(itemIndex + 1))\n}\n```\n\nNo need to call computeTimestampVisibility, it will be call inside computeChatview when nItem is true. And better not use QtCallLater on computeSequencing, we just need to wait nItem to be true and to call it nomally when the conditions are met",
      "parentUuid": "870cec65_bd80ac3d",
      "range": {
        "startLine": 87,
        "startChar": 15,
        "endLine": 89,
        "endChar": 13
      },
      "revId": "f3334fed4563a180d1e99a5d5d1dd856ee600225",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c349e661_a580bc97",
        "filename": "src/app/mainview/components/MessageListView.qml",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-12-01T03:31:30Z",
      "side": 0,
      "message": "Actually, it seems that the approach proposed by Nicolas doesn\u0027t work and got the same problem as before.",
      "parentUuid": "4db25c84_9501fe52",
      "range": {
        "startLine": 87,
        "startChar": 15,
        "endLine": 89,
        "endChar": 13
      },
      "revId": "f3334fed4563a180d1e99a5d5d1dd856ee600225",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3becfa8b_83d1c1ab",
        "filename": "src/app/mainview/components/MessageListView.qml",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-12-01T12:49:22Z",
      "side": 0,
      "message": "Done",
      "parentUuid": "c349e661_a580bc97",
      "range": {
        "startLine": 87,
        "startChar": 15,
        "endLine": 89,
        "endChar": 13
      },
      "revId": "f3334fed4563a180d1e99a5d5d1dd856ee600225",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    }
  ]
}