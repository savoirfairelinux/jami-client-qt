{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8491d3d5_e8a47913",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 892
      },
      "writtenOn": "2022-11-07T16:29:52Z",
      "side": 1,
      "message": "Thanks :) just some minor things below.  I\u0027ll try to test this out today or tomorrow and give an actual code review as well.\n\nBTW, can we please keep using dashes in filename(s)?  I personally prefer them over underscores, and IIRC we standardized on them recently as well:\nhttps://git.jami.net/savoirfairelinux/jami-client-qt/-/tree/master/extras/scripts\nSo, how about gen-resources-qrc.py?",
      "revId": "31a8e43adb14ed98eb983a9fa7b60951de164077",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "643ca12e_a4d00a47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 90
      },
      "writtenOn": "2022-11-07T17:09:20Z",
      "side": 1,
      "message": "Right so, consistency-is-king should generally be applied, and yeah we did just recently discuss and agree on dashes, and yeah I would normally vote we adhere to PEP 8 style guide here and migrate JUST the other python scripts to have the same style(or remove separators completely) for a couple of reasons:\n1. no questioning, just use a linter, effectively removing this current dispute\n2. doesn\u0027t import without some special syntax\n3. double click select the file name not just a part\n\nHowever, these are scripts and not used as modules. If and when the day comes that a module is introduced, I would suggest using underscores.",
      "parentUuid": "8491d3d5_e8a47913",
      "revId": "31a8e43adb14ed98eb983a9fa7b60951de164077",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80047496_871cf645",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 892
      },
      "writtenOn": "2022-11-08T15:29:12Z",
      "side": 1,
      "message": "Hey, thanks for the reply, I think (2) is indeed a compelling reason for using underscores over dashes in python file names.  I was hoping python would \"do the right thing\" and e.g. allow importing my-script.py as my_script, but I guess not.\n\nIn which case I\u0027m totally fine with using underscore across our python script/module file names, and dashes for anything else.",
      "parentUuid": "643ca12e_a4d00a47",
      "revId": "31a8e43adb14ed98eb983a9fa7b60951de164077",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48ac0f63_27feed86",
        "filename": "extras/scripts/gen_resources_qrc.py",
        "patchSetId": 3
      },
      "lineNbr": 4,
      "author": {
        "id": 892
      },
      "writtenOn": "2022-11-07T16:29:52Z",
      "side": 1,
      "message": "I think it would be better to put the module documentation after the copyright and license notice.",
      "revId": "31a8e43adb14ed98eb983a9fa7b60951de164077",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3334df60_a63c6290",
        "filename": "extras/scripts/gen_resources_qrc.py",
        "patchSetId": 3
      },
      "lineNbr": 4,
      "author": {
        "id": 90
      },
      "writtenOn": "2022-11-07T17:09:20Z",
      "side": 1,
      "message": "will do",
      "parentUuid": "48ac0f63_27feed86",
      "revId": "31a8e43adb14ed98eb983a9fa7b60951de164077",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4437e46_b648e62a",
        "filename": "extras/scripts/gen_resources_qrc.py",
        "patchSetId": 3
      },
      "lineNbr": 4,
      "author": {
        "id": 90
      },
      "writtenOn": "2022-11-09T22:44:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3334df60_a63c6290",
      "revId": "31a8e43adb14ed98eb983a9fa7b60951de164077",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9823de7b_08273754",
        "filename": "extras/scripts/gen_resources_qrc.py",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 892
      },
      "writtenOn": "2022-11-08T15:29:12Z",
      "side": 1,
      "message": "This new syntax does not work with Python 3.8 e.g. from Trisquel 10 (Ubuntu 20.04):\n\n  File \"/home/bandali/src/jami/dev/jami-client-qt/extras/scripts/gen_resources_qrc.py\", line 54\n    with (open(resfile, \u0027w\u0027, encoding\u003d\u0027utf-8\u0027) as qrc,\n                                               ^\nSyntaxError: invalid syntax\n\nCan we please use the older syntax and break the long line with a \u0027\\\u0027 for now?",
      "revId": "31a8e43adb14ed98eb983a9fa7b60951de164077",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81a30ab1_9095ee4a",
        "filename": "extras/scripts/gen_resources_qrc.py",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 90
      },
      "writtenOn": "2022-11-09T22:44:17Z",
      "side": 1,
      "message": "Certainly; I encountered the same issue",
      "parentUuid": "9823de7b_08273754",
      "revId": "31a8e43adb14ed98eb983a9fa7b60951de164077",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    }
  ]
}