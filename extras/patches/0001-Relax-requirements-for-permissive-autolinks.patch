From e9b6dd650d5ab7c03017c096a6bf74efb8c9dc27 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Fran=C3=A7ois-Simon=20Fauteux-Chapleau?=
 <francois-simon.fauteux-chapleau@savoirfairelinux.com>
Date: Thu, 20 Mar 2025 12:02:42 -0400
Subject: [PATCH] Relax requirements for permissive autolinks

* '+' and ':' and now allowed in the "path" component of URLs.
* The requirement that non-alphanumerical characters be surrounded by
  alphanumerical characters is now only applied to the "host" component
  of URLs.
* '[' and ']' are now allowed in the "query" component of URLs.
---
 src/md4c.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/md4c.c b/src/md4c.c
index e3f5cf9..7b153b7 100644
--- a/src/md4c.c
+++ b/src/md4c.c
@@ -3906,8 +3906,8 @@ md_analyze_permissive_autolink(MD_CTX* ctx, int mark_index)
         const MD_CHAR optional_end_char;
     } URL_MAP[] = {
         { _T('\0'), _T('.'),  _T(".-_"),      2, _T('\0') },    /* host, mandatory */
-        { _T('/'),  _T('/'),  _T("/.-_"),     0, _T('/') },     /* path */
-        { _T('?'),  _T('&'),  _T("&.-+_=()"), 1, _T('\0') },    /* query */
+        { _T('/'),  _T('/'),  _T("/.-+_:"),     0, _T('/') },     /* path */
+        { _T('?'),  _T('&'),  _T("&.-+_=()[]"), 1, _T('\0') },    /* query */
         { _T('#'),  _T('\0'), _T(".-+_") ,    1, _T('\0') }     /* fragment */
     };
 
@@ -3978,8 +3978,8 @@ md_analyze_permissive_autolink(MD_CTX* ctx, int mark_index)
             } else if(end < line_end  &&
                         ISANYOF(end, URL_MAP[i].allowed_nonalnum_chars)  &&
                         md_scan_right_for_resolved_mark(ctx, right_cursor, end, &right_cursor) == NULL  &&
-                        ((end > line_beg && (ISALNUM(end-1) || CH(end-1) == _T(')')))  ||  CH(end) == _T('('))  &&
-                        ((end+1 < line_end && (ISALNUM(end+1) || CH(end+1) == _T('(')))  ||  CH(end) == _T(')')))
+                        (i > 0 || (end > line_beg && (ISALNUM(end-1) || CH(end-1) == _T(')')))  ||  CH(end) == _T('('))  &&
+                        (i > 0 || (end+1 < line_end && (ISALNUM(end+1) || CH(end+1) == _T('(')))  ||  CH(end) == _T(')')))
             {
                 if(CH(end) == URL_MAP[i].delim_char)
                     n_components++;
-- 
2.34.1

